

================================================================
== Vitis HLS Report for 'fir_Pipeline_read_a'
================================================================
* Date:           Tue Feb  4 17:14:02 2025

* Version:        2024.2 (Build 5238294 on Nov  8 2024)
* Project:        fir2
* Solution:       hls (Vitis Kernel Flow Target)
* Product family: zynquplusRFSOC
* Target device:  xczu48dr-ffvg1517-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  5.00 ns|  1.651 ns|     1.35 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+------------------------------------------------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval |                    Pipeline                    |
    |   min   |   max   |    min    |    max    | min | max |                      Type                      |
    +---------+---------+-----------+-----------+-----+-----+------------------------------------------------+
    |       12|       12|  60.000 ns|  60.000 ns|   11|   11|  loop auto-rewind stp (delay=0 clock cycles(s))|
    +---------+---------+-----------+-----------+-----+-----+------------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- read_a  |       10|       10|         2|          1|          1|    10|       yes|
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.65>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%k = alloca i32 1" [fir.cpp:13]   --->   Operation 5 'alloca' 'k' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%empty = alloca i32 1"   --->   Operation 6 'alloca' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%empty_19 = alloca i32 1"   --->   Operation 7 'alloca' 'empty_19' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%empty_20 = alloca i32 1"   --->   Operation 8 'alloca' 'empty_20' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%empty_21 = alloca i32 1"   --->   Operation 9 'alloca' 'empty_21' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%empty_22 = alloca i32 1"   --->   Operation 10 'alloca' 'empty_22' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%empty_23 = alloca i32 1"   --->   Operation 11 'alloca' 'empty_23' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%empty_24 = alloca i32 1"   --->   Operation 12 'alloca' 'empty_24' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%empty_25 = alloca i32 1"   --->   Operation 13 'alloca' 'empty_25' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%empty_26 = alloca i32 1"   --->   Operation 14 'alloca' 'empty_26' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%empty_27 = alloca i32 1"   --->   Operation 15 'alloca' 'empty_27' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %a, void @empty_0, i32 0, i32 0, void @empty_1, i32 0, i32 0, void @empty, void @empty, void @empty, i32 0, i32 0, i32 0, i32 0, void @empty, void @empty, i32 4294967295, i32 0, i32 0"   --->   Operation 16 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.42ns)   --->   "%store_ln13 = store i4 0, i4 %k" [fir.cpp:13]   --->   Operation 17 'store' 'store_ln13' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%br_ln13 = br void %for.inc" [fir.cpp:13]   --->   Operation 18 'br' 'br_ln13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%k_1 = load i4 %k" [fir.cpp:13]   --->   Operation 19 'load' 'k_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.79ns)   --->   "%icmp_ln13 = icmp_eq  i4 %k_1, i4 10" [fir.cpp:13]   --->   Operation 20 'icmp' 'icmp_ln13' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.79ns)   --->   "%add_ln13 = add i4 %k_1, i4 1" [fir.cpp:13]   --->   Operation 21 'add' 'add_ln13' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%br_ln13 = br i1 %icmp_ln13, void %for.inc.split, void %shift_loop.preheader.exitStub" [fir.cpp:13]   --->   Operation 22 'br' 'br_ln13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.79ns)   --->   "%switch_ln14 = switch i4 %k_1, void %arrayidx2.case.9, i4 0, void %for.inc.split.arrayidx2.exit_crit_edge, i4 1, void %arrayidx2.case.1, i4 2, void %arrayidx2.case.2, i4 3, void %arrayidx2.case.3, i4 4, void %arrayidx2.case.4, i4 5, void %arrayidx2.case.5, i4 6, void %arrayidx2.case.6, i4 7, void %arrayidx2.case.7, i4 8, void %arrayidx2.case.8" [fir.cpp:14]   --->   Operation 23 'switch' 'switch_ln14' <Predicate = (!icmp_ln13)> <Delay = 0.79>
ST_1 : Operation 24 [1/1] (0.42ns)   --->   "%store_ln13 = store i4 %add_ln13, i4 %k" [fir.cpp:13]   --->   Operation 24 'store' 'store_ln13' <Predicate = (!icmp_ln13)> <Delay = 0.42>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%br_ln13 = br void %for.inc" [fir.cpp:13]   --->   Operation 25 'br' 'br_ln13' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%p_load18 = load i32 %empty"   --->   Operation 50 'load' 'p_load18' <Predicate = (icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%p_load17 = load i32 %empty_19"   --->   Operation 51 'load' 'p_load17' <Predicate = (icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%p_load16 = load i32 %empty_20"   --->   Operation 52 'load' 'p_load16' <Predicate = (icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%p_load15 = load i32 %empty_21"   --->   Operation 53 'load' 'p_load15' <Predicate = (icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%p_load14 = load i32 %empty_22"   --->   Operation 54 'load' 'p_load14' <Predicate = (icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%p_load13 = load i32 %empty_23"   --->   Operation 55 'load' 'p_load13' <Predicate = (icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%p_load12 = load i32 %empty_24"   --->   Operation 56 'load' 'p_load12' <Predicate = (icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%p_load11 = load i32 %empty_25"   --->   Operation 57 'load' 'p_load11' <Predicate = (icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%p_load10 = load i32 %empty_26"   --->   Operation 58 'load' 'p_load10' <Predicate = (icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%p_load = load i32 %empty_27"   --->   Operation 59 'load' 'p_load' <Predicate = (icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %p_out, i32 %p_load"   --->   Operation 60 'write' 'write_ln0' <Predicate = (icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %p_out1, i32 %p_load10"   --->   Operation 61 'write' 'write_ln0' <Predicate = (icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %p_out2, i32 %p_load11"   --->   Operation 62 'write' 'write_ln0' <Predicate = (icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %p_out3, i32 %p_load12"   --->   Operation 63 'write' 'write_ln0' <Predicate = (icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %p_out4, i32 %p_load13"   --->   Operation 64 'write' 'write_ln0' <Predicate = (icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %p_out5, i32 %p_load14"   --->   Operation 65 'write' 'write_ln0' <Predicate = (icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %p_out6, i32 %p_load15"   --->   Operation 66 'write' 'write_ln0' <Predicate = (icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %p_out7, i32 %p_load16"   --->   Operation 67 'write' 'write_ln0' <Predicate = (icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %p_out8, i32 %p_load17"   --->   Operation 68 'write' 'write_ln0' <Predicate = (icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %p_out9, i32 %p_load18"   --->   Operation 69 'write' 'write_ln0' <Predicate = (icmp_ln13)> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.42ns)   --->   "%ret_ln0 = ret"   --->   Operation 70 'ret' 'ret_ln0' <Predicate = (icmp_ln13)> <Delay = 0.42>

State 2 <SV = 1> <Delay = 0.07>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%specpipeline_ln13 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty" [fir.cpp:13]   --->   Operation 26 'specpipeline' 'specpipeline_ln13' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%speclooptripcount_ln13 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 10, i64 10, i64 10" [fir.cpp:13]   --->   Operation 27 'speclooptripcount' 'speclooptripcount_ln13' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%specloopname_ln13 = specloopname void @_ssdm_op_SpecLoopName, void @empty_7" [fir.cpp:13]   --->   Operation 28 'specloopname' 'specloopname_ln13' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.07ns)   --->   "%a_local = read i32 @_ssdm_op_Read.axis.volatile.i32P128A, i32 %a" [fir.cpp:14]   --->   Operation 29 'read' 'a_local' <Predicate = true> <Delay = 0.07> <CoreInst = "regslice">   --->   Core 147 'regslice' <Latency = 0> <II = 1> <Delay = 0.65> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%store_ln14 = store i32 %a_local, i32 %empty_26" [fir.cpp:14]   --->   Operation 30 'store' 'store_ln14' <Predicate = (k_1 == 8)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%br_ln14 = br void %arrayidx2.exit" [fir.cpp:14]   --->   Operation 31 'br' 'br_ln14' <Predicate = (k_1 == 8)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%store_ln14 = store i32 %a_local, i32 %empty_25" [fir.cpp:14]   --->   Operation 32 'store' 'store_ln14' <Predicate = (k_1 == 7)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%br_ln14 = br void %arrayidx2.exit" [fir.cpp:14]   --->   Operation 33 'br' 'br_ln14' <Predicate = (k_1 == 7)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%store_ln14 = store i32 %a_local, i32 %empty_24" [fir.cpp:14]   --->   Operation 34 'store' 'store_ln14' <Predicate = (k_1 == 6)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%br_ln14 = br void %arrayidx2.exit" [fir.cpp:14]   --->   Operation 35 'br' 'br_ln14' <Predicate = (k_1 == 6)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%store_ln14 = store i32 %a_local, i32 %empty_23" [fir.cpp:14]   --->   Operation 36 'store' 'store_ln14' <Predicate = (k_1 == 5)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%br_ln14 = br void %arrayidx2.exit" [fir.cpp:14]   --->   Operation 37 'br' 'br_ln14' <Predicate = (k_1 == 5)> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%store_ln14 = store i32 %a_local, i32 %empty_22" [fir.cpp:14]   --->   Operation 38 'store' 'store_ln14' <Predicate = (k_1 == 4)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%br_ln14 = br void %arrayidx2.exit" [fir.cpp:14]   --->   Operation 39 'br' 'br_ln14' <Predicate = (k_1 == 4)> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%store_ln14 = store i32 %a_local, i32 %empty_21" [fir.cpp:14]   --->   Operation 40 'store' 'store_ln14' <Predicate = (k_1 == 3)> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%br_ln14 = br void %arrayidx2.exit" [fir.cpp:14]   --->   Operation 41 'br' 'br_ln14' <Predicate = (k_1 == 3)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%store_ln14 = store i32 %a_local, i32 %empty_20" [fir.cpp:14]   --->   Operation 42 'store' 'store_ln14' <Predicate = (k_1 == 2)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%br_ln14 = br void %arrayidx2.exit" [fir.cpp:14]   --->   Operation 43 'br' 'br_ln14' <Predicate = (k_1 == 2)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%store_ln14 = store i32 %a_local, i32 %empty_19" [fir.cpp:14]   --->   Operation 44 'store' 'store_ln14' <Predicate = (k_1 == 1)> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%br_ln14 = br void %arrayidx2.exit" [fir.cpp:14]   --->   Operation 45 'br' 'br_ln14' <Predicate = (k_1 == 1)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%store_ln14 = store i32 %a_local, i32 %empty" [fir.cpp:14]   --->   Operation 46 'store' 'store_ln14' <Predicate = (k_1 == 0)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%br_ln14 = br void %arrayidx2.exit" [fir.cpp:14]   --->   Operation 47 'br' 'br_ln14' <Predicate = (k_1 == 0)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%store_ln14 = store i32 %a_local, i32 %empty_27" [fir.cpp:14]   --->   Operation 48 'store' 'store_ln14' <Predicate = (k_1 != 0 & k_1 != 1 & k_1 != 2 & k_1 != 3 & k_1 != 4 & k_1 != 5 & k_1 != 6 & k_1 != 7 & k_1 != 8)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%br_ln14 = br void %arrayidx2.exit" [fir.cpp:14]   --->   Operation 49 'br' 'br_ln14' <Predicate = (k_1 != 0 & k_1 != 1 & k_1 != 2 & k_1 != 3 & k_1 != 4 & k_1 != 5 & k_1 != 6 & k_1 != 7 & k_1 != 8)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5.000ns, clock uncertainty: 1.350ns.

 <State 1>: 1.651ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln13', fir.cpp:13) of constant 0 on local variable 'k', fir.cpp:13 [24]  (0.427 ns)
	'load' operation 4 bit ('k', fir.cpp:13) on local variable 'k', fir.cpp:13 [27]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln13', fir.cpp:13) [28]  (0.797 ns)
	'store' operation 0 bit ('store_ln13', fir.cpp:13) of variable 'add_ln13', fir.cpp:13 on local variable 'k', fir.cpp:13 [68]  (0.427 ns)

 <State 2>: 0.079ns
The critical path consists of the following:
	axis read operation ('a_local', fir.cpp:14) on port 'a' (fir.cpp:14) [35]  (0.079 ns)
	'store' operation 0 bit ('store_ln14', fir.cpp:14) of variable 'a_local', fir.cpp:14 on local variable 'empty_22' [50]  (0.000 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
